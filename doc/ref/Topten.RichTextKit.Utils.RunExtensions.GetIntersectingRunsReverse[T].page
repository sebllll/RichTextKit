---
title: "RunExtensions.GetIntersectingRunsReverse&lt;T&gt;"
isMarkdown: false
import: "../.common.page"
---

    <h1 data-nav-secondary-text="Definition" id="definition">RunExtensions.GetIntersectingRunsReverse&lt;T&gt; Method</h1>


<p>
    <small>
        Assembly: Topten.RichTextKit.dll<br />
        Namespace: <a href="./../ref/Topten.RichTextKit.Utils">Topten.RichTextKit.Utils</a><br />

                Declaring Type: <a href="./../ref/Topten.RichTextKit.Utils.RunExtensions">RunExtensions</a><br />
                        </small>
</p>








<p>Given a list of consecutive runs, a start index and a length
provides a list of sub-runs in the list of runs (in reverse order)</p>


<pre class="language-csharp"><code class="language-csharp">[Runtime.CompilerServices.IteratorStateMachine(Topten.RichTextKit.Utils.RunExtensions&#x2B;&lt;GetIntersectingRunsReverse&gt;d__1`1[T])]&#xD;&#xA;public static IEnumerable&lt;SubRun&gt; GetIntersectingRunsReverse&lt;T&gt;(this IReadOnlyList&lt;T&gt; list, int offset, int length);</code></pre>


<h2 id="type-parameters">Type Parameters</h2>    <table class="name-description">
            <tr>
                <td>T</td>
                <td><p>The list element type</p>
</td>
            </tr>
    </table>
<h2 id="parameters">Parameters</h2>    <table class="name-description">
            <tr>
                <td>
                    this 
                    <a href="https://docs.microsoft.com/dotnet/api/System.Collections.Generic.IReadOnlyList-1">IReadOnlyList&lt;T&gt;</a> list
                </td>
                <td><p>The list of runs</p>
</td>
            </tr>
            <tr>
                <td>
                    
                    <a href="https://docs.microsoft.com/dotnet/api/System.Int32">int</a> offset
                </td>
                <td><p>The offset of the run</p>
</td>
            </tr>
            <tr>
                <td>
                    
                    <a href="https://docs.microsoft.com/dotnet/api/System.Int32">int</a> length
                </td>
                <td><p>The length of the run</p>
</td>
            </tr>
    </table>
<h2 id="returns">Returns</h2>    <table class="name-description">
        <tr>
            <td><a href="https://docs.microsoft.com/dotnet/api/System.Collections.Generic.IEnumerable-1">IEnumerable&lt;SubRun&gt;</a></td>
            <td><p>An enumerable collection of SubRuns</p>
</td>
        </tr>
    </table>







